{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0e479408-6dec-449b-9f44-fb62d85b2314",
   "metadata": {},
   "outputs": [],
   "source": [
    "# импонтируем пакет numpy\n",
    "import numpy as np "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "6daa5784-cb22-468e-b4d4-ae0bd2662c95",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица 1\n",
      "[[ 4  0  4  5]\n",
      " [ 0  1  5  6]\n",
      " [-2  2  2  0]\n",
      " [ 1 -5  1  3]]\n",
      "Определитель матрицы\n",
      "187\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    " Вычисляем определетиль \n",
    " Задание 1\n",
    " создаём матрицу 4 на 4 \n",
    "\"\"\"\n",
    "n_array1 = np.array([[4, 0, 4, 5], [0, 1, 5, 6], [-2, 2, 2, 0], [1, -5, 1, 3]]) \n",
    "\n",
    "# Отображение матрицы\n",
    "print(\"Матрица 1\") \n",
    "print(n_array1) \n",
    "\n",
    "# вычесление определителя матрицы\n",
    "det1 = np.linalg.det(n_array1) \n",
    "\n",
    "print(\"Определитель матрицы\") \n",
    "print(int(det1)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "a2570933-1046-4067-978c-a36fa9aa91c6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица 2\n",
      "[[ 5  0  1  3]\n",
      " [ 0  1 -1  3]\n",
      " [ 1  5  3  0]\n",
      " [ 3 -1  2  1]]\n",
      "Определитель матрицы\n",
      "117\n"
     ]
    }
   ],
   "source": [
    "# Задание 2\n",
    "# создаём матрицу 4 на 4 \n",
    "n_array2 = np.array([[5, 0, 1, 3], [0, 1,-1, 3], [1, 5, 3, 0], [3, -1, 2, 1]]) \n",
    "# Отображение матрицы\n",
    "print(\"Матрица 2\") \n",
    "print(n_array2) \n",
    "\n",
    "# вычесление определителя матрицы\n",
    "det2 = np.linalg.det(n_array2) \n",
    "\n",
    "print(\"Определитель матрицы\") \n",
    "print(int(det2)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "a2e266d5-bbbc-4d08-b0d7-05a647a3229b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица 3\n",
      "[[ 4  0  1  5]\n",
      " [ 1  1  0 -4]\n",
      " [ 7 -1  3 -2]\n",
      " [ 3 -4  1  1]]\n",
      "Определитель матрицы\n",
      "-142\n"
     ]
    }
   ],
   "source": [
    "# Задание 3\n",
    "# создаём матрицу 4 на 4 \n",
    "n_array3 = np.array([[4, 0, 1, 5], [1, 1,0, -4], [7, -1, 3, -2], [3, -4, 1, 1]])\n",
    "\n",
    "# Отображение матрицы\n",
    "print(\"Матрица 3\") \n",
    "print(n_array3) \n",
    "\n",
    "# вычесление определителя матрицы\n",
    "det3 = np.linalg.det(n_array3) \n",
    "\n",
    "print(\"Определитель матрицы\") \n",
    "print(int(det3)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "8730f68f-860e-4fc1-ad3a-bceb8ecf1d56",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица 7\n",
      "[[ 3  2  0  1]\n",
      " [ 0  2  2  3]\n",
      " [ 1  5  6 -2]\n",
      " [-2  0  3  2]]\n",
      "Определитель матрицы\n",
      "95\n"
     ]
    }
   ],
   "source": [
    "# Задание 7\n",
    "# создаём матрицу 4 на 4 \n",
    "n_array7 = np.array([[3, 2, 0, 1], [0, 2, 2, 3], [1, 5, 6, -2], [-2, 0, 3, 2]])\n",
    "\n",
    "# Отображение матрицы\n",
    "print(\"Матрица 7\") \n",
    "print(n_array7) \n",
    "\n",
    "# вычесление определителя матрицы\n",
    "det7 = np.linalg.det(n_array7) \n",
    "\n",
    "print(\"Определитель матрицы\") \n",
    "print(int(det7)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "53d921f0-bc34-4e86-ab00-7fda3518b990",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица 8\n",
      "[[ 3  2  0  1]\n",
      " [ 0  2  2  3]\n",
      " [ 1  5  6 -2]\n",
      " [-2  0  3  2]]\n",
      "Определитель матрицы\n",
      "407\n"
     ]
    }
   ],
   "source": [
    "# Задание 8\n",
    "# создаём матрицу 4 на 4 \n",
    "n_array8 = np.array([[5, 1, 3, 0], [-3, 0, 5, 2], [2, 1, -1, 3], [1, 5, 0, 7]])\n",
    "\n",
    "# Отображение матрицы\n",
    "print(\"Матрица 8\") \n",
    "print(n_array7) \n",
    "\n",
    "# вычесление определителя матрицы\n",
    "det8 = np.linalg.det(n_array8) \n",
    "\n",
    "print(\"Определитель матрицы\") \n",
    "print(int(det8)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "7d19c794-d52f-4430-8b55-c887d4683079",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица 9\n",
      "[[ 3  2  0  1]\n",
      " [ 0  2  2  3]\n",
      " [ 1  5  6 -2]\n",
      " [-2  0  3  2]]\n",
      "Определитель матрицы\n",
      "-287\n"
     ]
    }
   ],
   "source": [
    "# Задание 9\n",
    "# создаём матрицу 4 на 4 \n",
    "n_array9 = np.array([[7, 6, 0, 1], [1, 3, 5, 0], [0, 1, -2, 4], [1, 1, 2, 3]])\n",
    "\n",
    "# Отображение матрицы\n",
    "print(\"Матрица 9\") \n",
    "print(n_array7) \n",
    "\n",
    "# вычесление определителя матрицы\n",
    "det9 = np.linalg.det(n_array9) \n",
    "\n",
    "print(\"Определитель матрицы\") \n",
    "print(int(det9)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "7c618512-89a2-4d9d-9ebf-fc1aed72852f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица 13\n",
      "[[ 2  3  0  1]\n",
      " [-4  0  3  1]\n",
      " [ 0  8  7  5]\n",
      " [ 3  1  3  1]]\n",
      "Определитель матрицы\n",
      "-12\n"
     ]
    }
   ],
   "source": [
    "# Задание 13\n",
    "# создаём матрицу 4 на 4 \n",
    "n_array13 = np.array([[2, 3, 0, 1], [-4, 0, 3, 1], [0, 8, 7, 5], [3, 1, 3, 1]])\n",
    "\n",
    "# Отображение матрицы\n",
    "print(\"Матрица 13\") \n",
    "print(n_array13) \n",
    "\n",
    "# вычесление определителя матрицы\n",
    "det13 = np.linalg.det(n_array13) \n",
    "\n",
    "print(\"Определитель матрицы\") \n",
    "print(int(det13)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "a57d7248-7159-4d08-8b0f-c0a5fd9b6ff4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица 14\n",
      "[[ 3  1  3  1]\n",
      " [ 2  4  2  5]\n",
      " [ 1  4  5  3]\n",
      " [-1  0  3  2]]\n",
      "Определитель матрицы\n",
      "160\n"
     ]
    }
   ],
   "source": [
    "# Задание 14\n",
    "# создаём матрицу 4 на 4 \n",
    "n_array14 = np.array([[3, 1, 3, 1], [2, 4, 2, 5], [1, 4, 5, 3], [-1, 0, 3, 2]])\n",
    "\n",
    "# Отображение матрицы\n",
    "print(\"Матрица 14\") \n",
    "print(n_array14) \n",
    "\n",
    "# вычесление определителя матрицы\n",
    "det14 = np.linalg.det(n_array14) \n",
    "\n",
    "print(\"Определитель матрицы\") \n",
    "print(int(det14)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "15399e38-c683-4cb2-8a85-3ac6cc5b4d31",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица 15\n",
      "[[ 2  3  0  1]\n",
      " [-4  0  3  1]\n",
      " [ 0  8  7  5]\n",
      " [ 3  1  3  1]]\n",
      "Определитель матрицы\n",
      "-301\n"
     ]
    }
   ],
   "source": [
    "# Задание 15\n",
    "# создаём матрицу 4 на 4 \n",
    "n_array15 = np.array([[7, 6, 0, -1], [1, 3, 5, 0], [0, 1, -2, 4], [1, 1, 2, 3]])\n",
    "\n",
    "# Отображение матрицы\n",
    "print(\"Матрица 15\") \n",
    "print(n_array13) \n",
    "\n",
    "# вычесление определителя матрицы\n",
    "det15 = np.linalg.det(n_array15) \n",
    "\n",
    "print(\"Определитель матрицы\") \n",
    "print(int(det15)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "e23b8390-21f7-4070-bc00-06aee9fb9ed5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица А1\n",
      "[[ 1  2  4]\n",
      " [ 7  5 -2]\n",
      " [-2  1 -3]]\n",
      "Матрица B1\n",
      "[[-1  0  3]\n",
      " [ 2 -6  1]\n",
      " [-7  1  5]]\n",
      "Матрица C1\n",
      "[[-2  3]\n",
      " [ 4  0]\n",
      " [ 7 -1]]\n",
      "Сумма А1 и В1\n",
      "[[ 0  2  7]\n",
      " [ 9 -1 -1]\n",
      " [-9  2  2]]\n",
      "Разность B1 и A1\n",
      "[[ -2  -2  -1]\n",
      " [ -5 -11   3]\n",
      " [ -5   0   8]]\n",
      "Произведение A1 и C1\n",
      "[[ 34  -1]\n",
      " [ -8  23]\n",
      " [-13  -3]]\n",
      "Произведение A1, B1 и C1\n",
      "[[ 193 -100]\n",
      " [ -50   35]\n",
      " [-226   95]]\n"
     ]
    }
   ],
   "source": [
    "#Задание номер 2 сложение, вычитание, умножение матриц\n",
    "#Создание матриц 1\n",
    "A1 = np.array([[1, 2, 4], [7, 5, -2], [-2, 1, -3]])\n",
    "\n",
    "B1 = np.array([[-1, 0, 3], [2, -6, 1], [-7, 1, 5]])\n",
    "\n",
    "C1 = np.array([[-2, 3], [4, 0], [7, -1]])\n",
    " \n",
    "print(\"Матрица А1\")\n",
    "print(A1)\n",
    "print(\"Матрица B1\")\n",
    "print(B1)\n",
    "print(\"Матрица C1\")\n",
    "print(C1)\n",
    " \n",
    "# Сложение матриц\n",
    "print(\"Сумма А1 и В1\")\n",
    "print(np.add(A1, B1))\n",
    "\n",
    "# вычитание матриц\n",
    "print(\"Разность B1 и A1\")\n",
    "print(np.subtract(B1, A1))\n",
    "\n",
    "#умножение матриц №1\n",
    "print(\"Произведение A1 и C1\")\n",
    "print(np.matmul(A1, C1))\n",
    "\n",
    "#умножение матриц №2\n",
    "A1B1 = np.matmul(A1, B1)\n",
    "print(\"Произведение A1, B1 и C1\")\n",
    "print(np.matmul(A1B1, C1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "79309143-6097-4f2f-b47f-bde40fdb63ae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица А2\n",
      "[[ 0  3  4]\n",
      " [-7  1 -2]\n",
      " [ 2  1  6]]\n",
      "Матрица B2\n",
      "[[ 1  2  3]\n",
      " [ 7  0 -2]\n",
      " [-3 -2  5]]\n",
      "Матрица C2\n",
      "[[-3  2]\n",
      " [ 0  4]\n",
      " [-1  7]]\n",
      "Сумма А2 и В2\n",
      "[[ 1  5  7]\n",
      " [ 0  1 -4]\n",
      " [-1 -1 11]]\n",
      "Разность B2 и A2\n",
      "[[ 1 -1 -1]\n",
      " [14 -1  0]\n",
      " [-5 -3 -1]]\n",
      "Произведение A2 и C2\n",
      "[[ -4  40]\n",
      " [ 23 -24]\n",
      " [-12  50]]\n",
      "Произведение A2, B2 и C2\n",
      "[[ -41   84]\n",
      " [  15 -259]\n",
      " [  -7  188]]\n"
     ]
    }
   ],
   "source": [
    "#Создание матриц 2\n",
    "A2 = np.array([[0, 3, 4], [-7, 1, -2], [2, 1, 6]])\n",
    "\n",
    "B2 = np.array([[1, 2, 3], [7, 0, -2], [-3, -2, 5]])\n",
    "\n",
    "C2 = np.array([[-3, 2], [0, 4], [-1, 7]])\n",
    " \n",
    "print(\"Матрица А2\")\n",
    "print(A2)\n",
    "print(\"Матрица B2\")\n",
    "print(B2)\n",
    "print(\"Матрица C2\")\n",
    "print(C2)\n",
    " \n",
    "# Сложение матриц\n",
    "print(\"Сумма А2 и В2\")\n",
    "print(np.add(A2, B2))\n",
    "\n",
    "# вычитание матриц\n",
    "print(\"Разность B2 и A2\")\n",
    "print(np.subtract(B2, A2))\n",
    "\n",
    "#умножение матриц №1\n",
    "print(\"Произведение A2 и C2\")\n",
    "print(np.matmul(A2, C2))\n",
    "\n",
    "#умножение матриц №2\n",
    "A2B2 = np.matmul(A2, B2)\n",
    "print(\"Произведение A2, B2 и C2\")\n",
    "print(np.matmul(A2B2, C2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "b46415e2-0eb5-4645-bac6-15411b666f4e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица А3\n",
      "[[ 5  2  9]\n",
      " [ 7  0 -2]\n",
      " [-2  1  6]]\n",
      "Матрица B3\n",
      "[[ 1 -2  1]\n",
      " [ 7  5 -2]\n",
      " [-2  8  3]]\n",
      "Матрица C3\n",
      "[[-2  3]\n",
      " [ 4  5]\n",
      " [ 0 -1]]\n",
      "Сумма А3 и В3\n",
      "[[ 6  0 10]\n",
      " [14  5 -4]\n",
      " [-4  9  9]]\n",
      "Разность B3 и A3\n",
      "[[-4 -4 -8]\n",
      " [ 0  5  0]\n",
      " [ 0  7 -3]]\n",
      "Произведение A3 и C3\n",
      "[[ 34  -1]\n",
      " [ -8  23]\n",
      " [-13  -3]]\n",
      "Произведение A3, B3 и C3\n",
      "[[ 286  335]\n",
      " [-142 -118]\n",
      " [ 242  250]]\n"
     ]
    }
   ],
   "source": [
    "#Создание матриц 3\n",
    "A3 = np.array([[5, 2, 9], [7, 0, -2], [-2, 1, 6]])\n",
    "\n",
    "B3 = np.array([[1, -2, 1], [7, 5, -2], [-2, 8, 3]])\n",
    "\n",
    "C3 = np.array([[-2, 3], [4, 5], [0, -1]])\n",
    " \n",
    "print(\"Матрица А3\")\n",
    "print(A3)\n",
    "print(\"Матрица B3\")\n",
    "print(B3)\n",
    "print(\"Матрица C3\")\n",
    "print(C3)\n",
    " \n",
    "# Сложение матриц\n",
    "print(\"Сумма А3 и В3\")\n",
    "print(np.add(A3, B3))\n",
    "\n",
    "# вычитание матриц\n",
    "print(\"Разность B3 и A3\")\n",
    "print(np.subtract(B3, A3))\n",
    "\n",
    "#умножение матриц №1\n",
    "print(\"Произведение A3 и C3\")\n",
    "print(np.matmul(A1, C1))\n",
    "\n",
    "#умножение матриц №2\n",
    "A3B3 = np.matmul(A3, B3)\n",
    "print(\"Произведение A3, B3 и C3\")\n",
    "print(np.matmul(A3B3, C3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "25aa1db0-e33f-4bd5-b906-83b08e3e589c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица А4\n",
      "[[ 1 -2  8]\n",
      " [ 7  5 -2]\n",
      " [-2  3  0]]\n",
      "Матрица B4\n",
      "[[ 0  2  4]\n",
      " [ 1 -3 -2]\n",
      " [-2  1  3]]\n",
      "Матрица C4\n",
      "[[ 0  3]\n",
      " [ 5 -4]\n",
      " [ 7 -1]]\n",
      "Сумма А4 и В4\n",
      "[[ 1  0 12]\n",
      " [ 8  2 -4]\n",
      " [-4  4  3]]\n",
      "Разность B4 и A4\n",
      "[[-1  4 -4]\n",
      " [-6 -8  0]\n",
      " [ 0 -2  3]]\n",
      "Произведение A4 и C4\n",
      "[[ 46   3]\n",
      " [ 11   3]\n",
      " [ 15 -18]]\n",
      "Произведение A4, B4 и C4\n",
      "[[ 304 -150]\n",
      " [  69   27]\n",
      " [-163   75]]\n"
     ]
    }
   ],
   "source": [
    "#Создание матриц 4\n",
    "A4 = np.array([[1, -2, 8], [7, 5, -2], [-2,3, 0]])\n",
    "\n",
    "B4 = np.array([[0, 2, 4], [1, -3, -2], [-2, 1, 3]])\n",
    "\n",
    "C4 = np.array([[0, 3], [5, -4], [7, -1]])\n",
    " \n",
    "print(\"Матрица А4\")\n",
    "print(A4)\n",
    "print(\"Матрица B4\")\n",
    "print(B4)\n",
    "print(\"Матрица C4\")\n",
    "print(C4)\n",
    " \n",
    "# Сложение матриц\n",
    "print(\"Сумма А4 и В4\")\n",
    "print(np.add(A4, B4))\n",
    "\n",
    "# вычитание матриц\n",
    "print(\"Разность B4 и A4\")\n",
    "print(np.subtract(B4, A4))\n",
    "\n",
    "#умножение матриц №1\n",
    "print(\"Произведение A4 и C4\")\n",
    "print(np.matmul(A4, C4))\n",
    "\n",
    "#умножение матриц №2\n",
    "A4B4 = np.matmul(A4, B4)\n",
    "print(\"Произведение A4, B4 и C4\")\n",
    "print(np.matmul(A4B4, C4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "a6abbb30-8967-411f-abb5-066a35003807",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Матрица А5\n",
      "[[ 1  2  4]\n",
      " [ 7  5 -2]\n",
      " [-2  1 -3]]\n",
      "Матрица B5\n",
      "[[-1  0  3]\n",
      " [ 2 -6  1]\n",
      " [-7  1  5]]\n",
      "Матрица C5\n",
      "[[-2  3]\n",
      " [ 4  0]\n",
      " [ 7 -1]]\n",
      "Сумма А5 и В5\n",
      "[[ 0  2  7]\n",
      " [ 9 -1 -1]\n",
      " [-9  2  2]]\n",
      "Разность B5 и A5\n",
      "[[ -2  -2  -1]\n",
      " [ -5 -11   3]\n",
      " [ -5   0   8]]\n",
      "Произведение A5 и C5\n",
      "[[ 34  -1]\n",
      " [ -8  23]\n",
      " [-13  -3]]\n",
      "Произведение A5, B5 и C5\n",
      "[[ 193 -100]\n",
      " [ -50   35]\n",
      " [-226   95]]\n"
     ]
    }
   ],
   "source": [
    "#Создание матриц\n",
    "A5 = np.array([[1, 2, 4], [7, 5, -2], [-2, 1, -3]])\n",
    "\n",
    "B5 = np.array([[-1, 0, 3], [2, -6, 1], [-7, 1, 5]])\n",
    "\n",
    "C5 = np.array([[-2, 3], [4, 0], [7, -1]])\n",
    " \n",
    "print(\"Матрица А5\")\n",
    "print(A5)\n",
    "print(\"Матрица B5\")\n",
    "print(B5)\n",
    "print(\"Матрица C5\")\n",
    "print(C5)\n",
    " \n",
    "# Сложение матриц\n",
    "print(\"Сумма А5 и В5\")\n",
    "print(np.add(A5, B5))\n",
    "\n",
    "# вычитание матриц\n",
    "print(\"Разность B5 и A5\")\n",
    "print(np.subtract(B5, A5))\n",
    "\n",
    "#умножение матриц №1\n",
    "print(\"Произведение A5 и C5\")\n",
    "print(np.matmul(A5, C5))\n",
    "\n",
    "#умножение матриц №2\n",
    "A5B5 = np.matmul(A5, B5)\n",
    "print(\"Произведение A5, B5 и C5\")\n",
    "print(np.matmul(A5B5, C5))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
